
@model Blockexplorer.Models.TransactionModel
@{
    Layout = null;
}

<ul class="list-group">

    <li class="list-group-item clearfix intput-output-group-list-item">
        <div class="intput-output-group">
            <div class="icon dspl-icon">
                <img src="/images/favicon.png" style="width: 35px; height: 35px; margin: 5px;"/>
                @*<span class="currency-icon thumbnail">
                    <span class="bg-warning">

                        <i class="fa fa-btc"></i>
                    </span>
                </span>*@
            </div>
            <div class="inputs">
                @if (Model.Transaction.IsCoinBase)
                {
                    <div class="address-item ">
                        <div class="amount">

                        </div>
                        <div class="address">
                            <b>Mined coins</b>
                        </div>
                    </div>
                }
                else if (Model.Transaction.Block.IsProofOfStake)
                {
                    <div class="address-item ">
                        <div class="amount">

                        </div>
                        <div class="address">
                            <b>Staked coins</b>
                        </div>
                    </div>
                }
                else
                {
                    foreach (var input in Model.Transaction.TransactionIn.Where(input => input.AssetId == null))
                    {
                        <div class="address-item ">
                            <div class="amount">
@*5-improved-display-minting-mining-transaction*@
                                - @input.Value

                            </div>
                            <div class="address">
                                <i class="fa fa-lg fa-arrow-left displ-fa"></i>
                                @if (input.Address == null)
                        {
                                    <span>Unrecognized address</span>
                                }
                                else 
                                {
                                    <a onclick="return false;" href="@Url.Action("Index", "Address", new { id = input.Address })">@input.Address</a>
                                    <br/>
                                    <a href="@Url.Action("Index", "Transaction", new { id = input.TransactionId })">@input.TransactionId</a>
                    }
@*
                                @input.Value
                               
                            </div>
                            <div class="address">
                                <a onclick="return false;" href="@Url.Action("Index", "Address", new { id = input.Address })">@input.Address</a>
                                <br/>
                                <a href="@Url.Action("Index", "Transaction", new { id = input.TransactionId })">@input.TransactionId</a>
*@
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="outputs">
                <div class="outputs-container">
                    <div class="center-chevron">
                        <img src="/images/arrow.png" />
                    </div>

                    @foreach (var output in Model.Transaction.TransactionsOut)
                    {
                        <div class="address-item ">
                            <div class="amount">
                                @output.Value
                            </div>
                            <div class="address">
                                @if (output.Address == null)
                                {
                                    <span>Unrecognized address</span>
                                }
                                else
                                { 
                                    <a onclick="return false;" href="@Url.Action("Index", "Address", new { id = output.Address })">@output.Address</a>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div> 
        </div>
    </li>
</ul>